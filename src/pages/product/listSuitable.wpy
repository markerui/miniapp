<style lang="less">
@import '../../less/color.less';
@import '../../less/cardlist.less';
</style>

<template>
  <view class="sortField-tab">
    <van-row>
      <repeat for="{{sortField}}" key="index" index="index" item="item">
        <van-col
          span="6"
          id="{{index}}"
          bindtap="onClickSortField"
          class="van-col-item {{index==sortFieldIndex?'van-col-item_active':''}} {{item.desc?'van-col-item_active_desc0':'van-col-item_active_desc1'}}"
        >{{item.name}}</van-col>
      </repeat>
    </van-row>
  </view>
  <block wx:if="{{cardProList.length>0}}">
    <scroll-view scroll-y style="height: {{windowHeight}}px; width:98vw;" bindscrolltolower="scrollLower">
      <van-cell-group class="mk-card_item-list">
        <van-row>
          <repeat for="{{cardProList}}" key="index" index="index" item="cardProItem">
            <van-col span="12">
              <prolist :cardProItem="cardProItem" :isLogin="isLogin"></prolist>
            </van-col>
          </repeat>
        </van-row>
      </van-cell-group>
    </scroll-view>
  </block>
  <block wx:else>
    <nodata></nodata>
  </block>
  <van-toast id="van-toast"/>
</template>

<script>
import wepy from 'wepy';
import Api from '../../utils/api';
import proList from '../../components/prolist2';
import Toast from '../../components/vant/toast/toast';
import noData from '../../components/nodata';

export default class info extends wepy.page {
  config = {
    navigationBarTitleText: '产品列表',
    usingComponents: {
      'van-icon': '../../components/vant/icon/index',
      'van-button': '../../components/vant/button/index',
      'van-cell': '../../components/vant/cell/index',
      'van-cell-group': '../../components/vant/cell-group/index',
      'van-card': '../../components/vant/card/index',
      'van-toast': '../../components/vant/toast/index',
      'van-row': '../../components/vant/row/index',
      'van-col': '../../components/vant/col/index'
    }
  };

  components = {
    prolist: proList,
    nodata: noData
  };

  mixins = [];

  data = {
    windowHeight: 0,
    isLogin: false,
    reqData: {
      id: 0,
      pageIndex: 1,
      pageSize: 6,
      sortField: 'sort',
      isDesc: true
    },
    hasNextPage: true,
    sortFieldIndex: 3,
    sortField: [
      {
        name: '最新',
        desc: false
      },
      {
        name: '销量',
        desc: false
      },
      {
        name: '价格',
        desc: false
      },
      {
        name: '综合',
        desc: true
      }
    ],
    cardProList: []
  };

  computed = {};

  methods = {
    onClickSortField(e) {
      var that = this;
      var index = e.currentTarget.id;
      that.sortFieldIndex = index;
      that.sortField[index].desc = !that.sortField[index].desc;
      that.reqData.pageIndex = 1;
      that.reqData.isDesc = that.sortField[index].desc;
      that.hasNextPage = true;
      that.cardProList = [];
      switch (index) {
        case '0':
          that.reqData.sortField = 'date';
          break;
        case '1':
          that.reqData.sortField = 'sale';
          break;
        case '2':
          that.reqData.sortField = 'price';
          break;
        case '3':
          that.reqData.sortField = 'sort';
          break;
        default:
          that.reqData.sortField = 'sort';
          break;
      }
      if (that.reqData.id) {
        that.GetProductSuitableOccasion();
      } else {
        that.GetProductSuitableOccasion();
      }
    },
    scrollLower() {
      var that = this;
      if (that.reqData.id) {
        that.GetProductSuitableOccasion();
      } else {
        that.GetProductSuitableOccasion();
      }
    }
  };

  events = {
    addcart(e) {
      var that = this;
      var reqData = {
        id: e
      };
      Api.PostMemberAddCart(reqData, function(res) {
        if(res.errCode >= 1000){
          Api.wxLogin(function(res) {
            if (res.resultData.tokenId) {
              that.events.addcart(e);
            } else {
              Toast.fail(res.message);
            }
          });
        }else{
          if (res.result) {
            Toast.success('加入购物车成功');
            that.cartCount += 1;
          } else {
            Toast.fail('操作失败,请重试');
          }
        }
      });
    },
    getuserinfo(e) {
      var that = this;
      var reqData = {
        openId: that.$parent.globalData.weChatInfo.openId,
        encryptedData: e.detail.encryptedData,
        iv: e.detail.iv,
        unionid: that.$parent.globalData.weChatInfo.unionid
      };
      that.$parent.getUserInfo(reqData, function() {
        that.isLogin = that.$parent.globalData.isLogin;
        that.$apply();
      });
    }
  };

  GetProductSuitableOccasion() {
    var that = this;
    var result = that.cardProList;
    if (that.hasNextPage) {
      Toast.loading({
        message: '加载中...'
      });
      Api.GetProductSuitableOccasion(that.reqData, function(res) {
        Toast.clear();
        if (res.result) {
          that.cardProList = result.concat(res.resultData.dataList);
          that.hasNextPage = res.resultData.hasNextPage;
          that.reqData.pageIndex += 1;
          that.$apply();
        } else {
          Toast.fail(res.message);
        }
      });
    } else {
      Toast({
        position: 'bottom',
        message: '没有更多数据了',
        duration: 1000
      });
    }
  }

  onLoad(e) {
    var that = this;
    let windowHeight = wx.getSystemInfoSync().windowHeight;
    let query = wx.createSelectorQuery();
    query
      .select('.sortField-tab')
      .boundingClientRect()
      .exec(function(res) {
        that.windowHeight = windowHeight - res[0].height;
      });
    that.isLogin = that.$parent.globalData.isLogin;
    if (e.id) {
      that.reqData.id = e.id;
      that.GetProductSuitableOccasion();
    }
  }
}
</script>
