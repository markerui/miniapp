<style lang="less">
@import '../../less/color.less';
@import '../../less/cardlist.less';
@import '../../less/cart.less';
.cart-confirm-margin_bottom10 {
  margin-bottom: 10px;
}

.cart-confirm-cll_title {
  .van-cell__value {
    color: #f44;
    font-weight: bold;
  }
}

.cart-confirm-address {
  .van-cell {
    background-color: @rootColor;
    color: #fff;
    .van-cell-info {
      line-height: 1.6;
      text {
        display: block;
        font-size: 12px;
      }
    }
  }
  .van-cell__right-icon-wrap {
    color: #fff;
  }
  .van-cell--clickable.van-cell--hover {
    background-color: rgba(@rootColor, 0.8);
  }
  &.cart-confirm-address_no {
    background-color: @rootColor;
    .van-cell {
      padding: 15px;
    }
    .van-cell__title {
      text-align: center;
    }
  }
}

.cart-confirm-list {
  .cart-confirm-list_head {
    .van-cell__title {
      font-weight: bold;
    }
  }
}

.cart-confirm-delivery {
  background-color: #fff;
  .cart-confirm-delivery_radio {
    padding: 15px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    font-size: 14px;
  }
  .cart-confirm-delivery_checkbox {
    padding: 0 15px 15px;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-end;
  }
}

.cart-confirm-order {
  background-color: #fff;
  padding: 10px 0;
  .van-cell {
    color: #999;
    font-size: 12px;
    padding: 0 15px;
  }
}

.save-confirm {
  padding: 30px;
  .save-confirm_btn {
    background-color: @rootColor;
  }
}
</style>

<template>
  <block wx:if="{{confirmData.addressID}}">
    <view class="cart-confirm-margin_bottom10 cart-confirm-address">
      <van-cell is-link border="{{ false }}" center url="../address/index?cart=1">
        <view slot="title">
          <view class="van-cell-info">
            <view class="van-cell-name">{{addressInfo.name}} {{addressInfo.mobile}}</view>
            <text>{{addressInfo.provinceName}}-{{addressInfo.cityName}}-{{addressInfo.countyName}}</text>
            <text>{{addressInfo.address}}</text>
          </view>
        </view>
      </van-cell>
    </view>
  </block>
  <block wx:else>
    <view class="cart-confirm-margin_bottom10 cart-confirm-address cart-confirm-address_no">
      <van-cell title="新增收货地址" border="{{ false }}" is-link center url="../address/index"/>
    </view>
  </block>
  <view class="cart-confirm-margin_bottom10 cart-confirm-cll_title cart-confirm-list">
    <view class="cart-confirm-list_head">
      <van-cell title="商品" value="¥{{ProAllPrice}}"/>
    </view>
    <van-cell-group>
      <repeat for="{{cardProList}}" key="index" index="index" item="cardProItem">
        <van-cell>
          <view slot="title">
            <view class="mk-cart-card_list">
              <van-card
                centered
                custom-class="mk-card_item"
                thumb-class="mk-card_img"
                title-class="mk-card_title"
                price="{{cardProItem.realPrice}}"
                title="{{cardProItem.productName}}"
                thumb="{{cardProItem.defaultImage}}"
                thumb-mode="aspectFill"
              >
                <view slot="desc" class="mk-card_desc">
                  <text>单位:{{cardProItem.unit}}</text>
                  <text>规格:{{cardProItem.size}}</text>
                </view>
                <view slot="footer" class="mk-card_item_stepper">
                  <text>剩余{{cardProItem.stock}}份</text>
                  <van-stepper
                    id="{{cardProItem.productID}}"
                    data-index="{{index}}"
                    disabled = "{{cartIn}}"
                    integer
                    min="1"
                    max="{{cardProItem.stock}}"
                    value="{{ cardProItem.productCount }}"
                    step="1"
                    bind:plus="onChangeAddStepper"
                    bind:minus="onChangeMinusStepper"
                  />
                </view>
              </van-card>
            </view>
          </view>
        </van-cell>
      </repeat>
    </van-cell-group>
  </view>
  <view class="cart-confirm-margin_bottom10 cart-confirm-cll_title cart-confirm-delivery">
    <van-cell value="¥{{confirmData.shippingFee}}">
      <view slot="title">
        配送方式
        <!-- <van-icon name="info-o" color="#999"/> -->
      </view>
    </van-cell>
    <van-checkbox-group class="cart-confirm-delivery_radio" value="{{checkType1Result}}" bind:change="onChangeCheckType1Result">
      <repeat for="{{checkType1}}" key="index" index="index" item="item">
        <van-checkbox name="{{item}}" checked-color="#e26431">{{item}}</van-checkbox>
       </repeat>
    </van-checkbox-group>
    <block wx:if="{{checkType2Show}}">
      <van-checkbox-group class="cart-confirm-delivery_checkbox" value="{{checkType2Result}}" bind:change="onChangeCheckType2Result">
        <repeat for="{{checkType2}}" key="index" index="index" item="item">
          <van-checkbox name="{{item}}" use-icon-slot>
            <van-button type="{{checkType2checked[index].check?'warning':'default'}}" plain size="small">{{item}}</van-button>
          </van-checkbox>
        </repeat>
      </van-checkbox-group>
    </block>
  </view>
  <view class="cart-confirm-margin_bottom10 cart-confirm-cll_title cart-confirm-pay">
    <van-cell title="支付方式" value="{{checkPay}}" bind:click="onCheckPay" is-link/>
  </view>
  <view class="cart-confirm-cll_title cart-confirm-coupon">
    <van-cell title="优惠券" value="¥{{couponNum}}" is-link url="../card/couponList?cart=1&productAmount={{productAmount}}"/>
  </view>
  <view class="cart-confirm-margin_bottom10 cart-confirm-cll_title cart-confirm-card">
    <van-cell title="礼品卡" value="¥{{giftCardNum}}" is-link url="../card/giftList?cart=1"/>
  </view>
  <view class="cart-confirm-margin_bottom10">
    <van-field type="textarea" value="{{confirmData.Message}}" placeholder="添加留言或备注信息" autosize border="{{ false }}"/>
  </view>
  <view class="cart-confirm-margin_bottom10">
    <view class="cart-confirm-order">
      <van-cell-group border="{{ false }}">
        <van-cell title="商品金额" value="¥{{ProAllPrice}}" border="{{ false }}"/>
        <van-cell title="配送费" value="+¥{{confirmData.shippingFee}}" border="{{ false }}"/>
        <van-cell title="优惠券" value="-¥{{couponNum}}" border="{{ false }}"/>
        <van-cell title="礼品卡" value="-¥{{giftCardNum}}" border="{{ false }}"/>
      </van-cell-group>
    </view>
    <view class="cart-confirm-cll_title">
      <van-cell-group>
        <van-cell title="订单金额" value="¥{{AllproductAmount}}" border="{{ false }}"/>
      </van-cell-group>
    </view>
  </view>
  <view class="save-confirm">
    <van-button
      type="warning"
      custom-class="save-confirm_btn"
      size="large"
      block
      round
      bind:tap="confirmOrder"
    >确认订单</van-button>
  </view>
  <van-dialog id="van-dialog"/>
  <van-toast id="van-toast"/>
</template>

<script>
import wepy from 'wepy';
import Api from '../../utils/api';
import Dialog from '../../components/vant/dialog/dialog';
import Toast from '../../components/vant/toast/toast';
import noData from '../../components/nodata';

export default class info extends wepy.page {
  config = {
    navigationBarTitleText: '确认订单',
    navigationBarBackgroundColor: '#fff',
    navigationBarTextStyle: 'black',
    backgroundColor: '#fff',
    usingComponents: {
      'van-icon': '../../components/vant/icon/index',
      'van-button': '../../components/vant/button/index',
      'van-cell': '../../components/vant/cell/index',
      'van-cell-group': '../../components/vant/cell-group/index',
      'van-card': '../../components/vant/card/index',
      'van-stepper': '../../components/vant/stepper/index',
      'van-field': '../../components/vant/field/index',
      'van-radio': '../../components/vant/radio/index',
      'van-radio-group': '../../components/vant/radio-group/index',
      'van-checkbox': '../../components/vant/checkbox/index',
      'van-checkbox-group': '../../components/vant/checkbox-group/index',
      'van-dialog': '../../components/vant/dialog/index',
      'van-toast': '../../components/vant/toast/index'
    }
  };

  components = {
    nodata: noData
  };

  mixins = [];

  data = {
    payList: ['微信支付', '银联支付'],
    checkPayIndex: 0,
    cartIn: true,
    checkType1:['自提','快递','物流','到付'],
    checkType1Result: [],
    checkType2Show: false,
    checkType2: ['货栈自提','送货上门'],
    checkType2checked: [
      {check: true},
      {check: false}
    ],
    productAmount: 0,
    shippingFee: 0,
    addressInfo: [],
    cardProList: [],
    confirmData: [],
    couponNum: 0,
    giftCardNum: 0
  };

  computed = {
    checkPay() {
      return this.payList[this.checkPayIndex];
    },
    AllproductAmount(){
      var AllproductAmount = 0;
      var AllproductAmount = this.productAmount + this.shippingFee - this.couponNum - this.giftCardNum;
      if(AllproductAmount<=0){
        AllproductAmount = 0;
      }
      return AllproductAmount;
    },
    ProAllPrice() {
      var that = this;
      var AllPrice = 0;
      if(that.cartIn){
        return that.productAmount;
      }else{
        that.cardProList.forEach(function(e) {
          AllPrice += e.productCount * e.realPrice;
        });
        that.productAmount = AllPrice;
        return AllPrice;
      }
    }
  };

  watch = {};

  methods = {
    onChangeAddStepper(e) {
      var that = this;
      var index = e.currentTarget.dataset.index;
      that.cardProList[index].productCount += 1;
      that.cardProList[index].stock -= 1;
      that.confirmData.productInfo.productCount = that.cardProList[index].productCount;
    },
    onChangeMinusStepper(e) {
      var that = this;
      var index = e.currentTarget.dataset.index;
      that.cardProList[index].productCount -= 1;
      that.cardProList[index].stock += 1;
      that.confirmData.productInfo.productCount = that.cardProList[index].productCount;
    },
    onChangeCheckType1Result(e){
      var that = this;
      var detail = e.detail;
      var detailLast = detail[detail.length-1];
      that.checkType1Result.length = 0;
      that.checkType2Show = false;
      that.checkType1Result.push(detailLast);
      switch (detailLast) {
        case '自提':
          that.confirmData.ShippingModel = 1;
          break;
        case '快递':
          that.confirmData.ShippingModel = 2;
          break;
        case '物流':
          that.checkType2Show = true;
          that.confirmData.ShippingModel = 3;
          that.checkType2checked[0].check = true;
          that.checkType2checked[1].check = false;
          break;
        case '到付':
          that.checkType2Show = true;
          that.checkType2checked[0].check = true;
          that.checkType2checked[1].check = false;
          if(detail.length >1){
            that.checkType1Result = ['物流','到付'];
            that.confirmData.ShippingModel = 5;
          }else{
            that.checkType1Result = ['物流'];
            if(that.checkType2checked[0].check){
              that.confirmData.ShippingModel = 3;
            }else{
              that.confirmData.ShippingModel = 4;
            }
          }
          break;
        default:
          break;
      }
      that.PostOrderGetShippingFee();
      that.$apply();
    },
    onChangeCheckType2Result(e){
      var that = this;
      var detail = e.detail;
      var detailLast = detail[detail.length-1];
      if(detailLast == '货栈自提'){
          that.checkType2checked[0].check = true;
          that.checkType2checked[1].check = false;
          if(that.checkType1Result.length>1){
            that.confirmData.ShippingModel = 5;
          }else{
            that.confirmData.ShippingModel = 3;
          }
      }else{
          that.checkType2checked[0].check = false;
          that.checkType2checked[1].check = true;
          if(that.checkType1Result.length>1){
            that.confirmData.ShippingModel = 6;
          }else{
            that.confirmData.ShippingModel = 4;
          }
      }
      that.PostOrderGetShippingFee();
      that.$apply();
    },
    onCheckPay() {
      let that = this;
      wx.showActionSheet({
        itemList: this.payList,
        success(res) {
          that.checkPayIndex = res.tapIndex;
          that.$apply();
        }
      });
    },
    confirmOrder() {
      var that = this;
      that.confirmData.actualTotalPrice = that.$data.AllproductAmount;
      that.PostOrderCreateOrder();
    }
  };

  events = {};
  
  PostOrderCreateOrder(){
    var that = this;
    Api.PostOrderCreateOrder(that.confirmData,function(res){
      wx.removeStorage({
        key: 'cartConfirm'
      });
      var orderNum = res.resultData.orderNum;
      if(that.checkPayIndex){
        Dialog.confirm({
          title: '订单已生成',
          message: '订单已经生成了，但是没有支付哦，可以这样也可以这样哦',
          showCancelButton: true,
          confirmButtonText: '继续微信支付',
          cancelButtonText: '订单中心'
        }).then(() => {
          that.PostOrderWeixinPay(orderNum);
        }).catch(() => {
          wx.redirectTo({
            url: '../order/list'
          });
        });
      }else{
        that.PostOrderWeixinPay(orderNum);
      }
    });
  }

  PostOrderWeixinPay(orderNum){
    var data = {
      orderNum: orderNum
    };
    Api.PostOrderWeixinPay(data,function(res){
      if(res.result){
        var prepaidOrder = res.resultData.prepaidOrder;
        wx.requestPayment({
          timeStamp: prepaidOrder.timeStamp,
          nonceStr: prepaidOrder.nonceStr,
          package: prepaidOrder.package,
          signType: prepaidOrder.signType,
          paySign: prepaidOrder.paySign,
          success(res) {
            Dialog.alert({
              title: '支付成功',
              message: res.message
            }).then(() => {
              wx.redirectTo({
                url: '../order/list'
              });
            });
          },
          fail(res){
            Dialog.alert({
              title: '支付失败',
              message: res.message
            }).then(() => {
              wx.redirectTo({
                url: '../order/list'
              });
            });
          }
        });
      }else{
        Dialog.alert({
          title: '支付失败',
          message: res.message
        }).then(() => {
          wx.redirectTo({
            url: '../order/list'
          });
        });
      }
    });
  }
  PostMemberGetAddress(){
    var that = this;
    var reqData = {
      id : that.confirmData.addressID
    };
    Api.PostMemberGetAddress(reqData,function(res){
      if(res.result){
        that.addressInfo = res.resultData.adressInfo;
        that.PostOrderGetShippingFee();
        that.$apply();
      }else{
        Toast.fail(res.message);
      }
    });
  }

  PostOrderGetShippingFee(){
    var that = this;
    Api.PostOrderGetShippingFee(that.confirmData,function(res){
      that.confirmData.shippingFee = res.resultData.shippingFee;
    });
  }
  
  onLoad(e) {
    var that = this;
    if(e.cart==1){
      that.cartIn = true;
    }else{
      that.cartIn = false;
    }
    wx.removeStorage({
      key: 'addressId'
    });
    wx.removeStorage({
      key: 'CouponID'
    });
    wx.removeStorage({
      key: 'GiftCardID'
    });
    wx.getStorage({
      key: 'cartConfirm',
      success(res) {
        if(e.cart==1){
          that.cardProList = res.data.cartList;
        }else{
          that.cardProList.push(res.data.orderInfo);
        }
        that.confirmData = res.data.orderData;
        that.productAmount = res.data.productAmount;
        if(that.confirmData.addressID){
          that.PostMemberGetAddress();
        }
        switch(res.data.orderData.shippingModel){
          case 1:
            that.checkType1Result.push('自提');
            break;
          case 2:
            that.checkType1Result.push('快递');
            break;
          default:
            break;
        }
      }
    });
  };

  onShow(e){
    var that = this;
    wx.getStorage({
      key: 'addressId',
      success(res) {
        that.confirmData.addressID = res.data;
        that.PostMemberGetAddress();
      }
    });
    wx.getStorage({
      key: 'CouponID',
      success(res) {
        if(res.data.couponID){
          that.confirmData.couponID = res.data.couponID;
        }else{
          that.confirmData.couponID = 0;
        }
        that.couponNum = res.data.couponNum;
        that.$apply();
      }
    });
    wx.getStorage({
      key: 'GiftCardID',
      success(res) {
        if(res.data.giftCardId){
          that.confirmData.giftCardID = res.data.giftCardId;
        }else{
          that.confirmData.giftCardID = 0;
        }
        that.giftCardNum = res.data.giftCardNum;
        that.$apply();
      }
    });
  }
}
</script>
