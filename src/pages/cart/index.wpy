<style lang="less">
@import '../../less/color.less';
@import '../../less/cardlist.less';
@import '../../less/cart.less';
.fiex-bottom {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  .van-submit-bar {
    position: relative;
  }
}
</style>

<template>
  <scroll-view scroll-y style="height: {{windowHeight}}px;">
    <repeat for="{{cardProList}}" key="index" index="index" item="cardProItem">
      <van-swipe-cell right-width="{{ 65 }}">
        <van-cell>
          <view slot="title">
            <view class="mk-cart-card_list">
              <view class="mk-cart-card_check">
                <van-checkbox
                  checked-color="#e26431"
                  value="{{ cardProItem.checked }}"
                  bind:change="onChangeCartChecke(event,{{index}})"
                ></van-checkbox>
              </view>
              <van-card
                centered
                custom-class="mk-card_item"
                thumb-class="mk-card_img"
                title-class="mk-card_title"
                price="{{cardProItem.realPrice}}"
                title="{{cardProItem.productName}}"
                thumb="{{cardProItem.defaultImage}}"
                thumb-mode="aspectFill"
              >
                <view slot="desc" class="mk-card_desc">
                  <text>单位:{{cardProItem.unit}}</text>
                  <text>规格:{{cardProItem.size}}</text>
                </view>
                <view slot="footer" class="mk-card_item_stepper">
                  <text>剩余{{cardProItem.stock}}份</text>
                  <van-stepper
                    id="{{cardProItem.productID}}"
                    integer
                    min="1"
                    max="{{cardProItem.stock}}"
                    value="{{ cardProItem.productCount }}"
                    step="1"
                    bind:change="onChangeStepper"
                  />
                </view>
              </van-card>
            </view>
          </view>
        </van-cell>
        <view slot="right" class="collect-right_btn">
          <text>删除</text>
        </view>
      </van-swipe-cell>
    </repeat>
  </scroll-view>
  <van-submit-bar
    class="fiex-bottom"
    custom-class="cart-submit-bar"
    button-text="确认订单"
    tip="您的收货地址不支持同城送, 我们已为您推荐快递"
    bind:submit="onSubmitOrder"
  >
    <view class="cart-submit-bar_right">
      <van-checkbox checked-color="#e26431">全选</van-checkbox>
      <view>
        <view class="text">商品金额:
          <text class="van-submit-bar__price">¥1920.20</text>
        </view>
        <view class="text text2">2种商品,共计1000件</view>
      </view>
    </view>
  </van-submit-bar>
  <van-dialog id="van-dialog"/>
</template>

<script>
import wepy from 'wepy';
import Api from '../../utils/api';
import Dialog from '../../components/vant/dialog/dialog';
import Toast from '../../components/vant/toast/toast';

export default class info extends wepy.page {
  config = {
    navigationBarTitleText: '购物车',
    usingComponents: {
      'van-swipe-cell': '../../components/vant/swipe-cell/index',
      'van-icon': '../../components/vant/icon/index',
      'van-button': '../../components/vant/button/index',
      'van-cell': '../../components/vant/cell/index',
      'van-cell-group': '../../components/vant/cell-group/index',
      'van-card': '../../components/vant/card/index',
      'van-stepper': '../../components/vant/stepper/index',
      'van-checkbox': '../../components/vant/checkbox/index',
      'van-checkbox-group': '../../components/vant/checkbox-group/index',
      'van-submit-bar': '../../components/vant/submit-bar/index',
      'van-dialog': '../../components/vant/dialog/index',
      'van-toast': '../../components/vant/toast/index'
    }
  };

  components = {};

  mixins = [];

  data = {
    windowHeight: 0,
    cardProList: []
  };

  computed = {};

  methods = {
    onChangeCartChecke(e, index) {
      this.cardProList[index].checked = e.detail;
    },
    onChangeStepper(e) {
      var that = this;
      var reqData = {
        id: e.currentTarget.id
      };
      Api.PostMemberAddCart(reqData, function(res) {
        if (res.result) {
          Toast.success('操作成功');
          that.cardProItem.stock -= 1;
        } else {
          Toast.fail('操作失败,请重试');
        }
      });
    },
    onSubmitOrder() {
      Dialog.alert({
        title: '订单确认失败',
        message: '库存不足',
        messageAlign: 'left'
      }).then(() => {
        wx.navigateTo({
          url: 'confirm'
        });
      });
    }
  };

  events = {};

  onLoad() {
    let that = this;
    let windowHeight = wx.getSystemInfoSync().windowHeight;
    let query = wx.createSelectorQuery();
    query
      .select('.fiex-bottom')
      .boundingClientRect()
      .exec(function(res) {
        that.windowHeight = windowHeight - res[0].height - 30;
      });
    Api.GetMemberMyCart(function(res) {
      that.cardProList = res.resultData.dataList;
      that.$apply();
    });
  }
}
</script>
