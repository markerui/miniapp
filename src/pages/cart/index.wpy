<style lang="less">
@import '../../less/color.less';
@import '../../less/cardlist.less';
@import '../../less/cart.less';
.fiex-bottom {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  .van-submit-bar {
    position: relative;
  }
}
</style>

<template>
  <scroll-view scroll-y style="height: {{windowHeight}}px;">
    <repeat for="{{cardProList}}" key="index" index="index" item="cardProItem">
      <van-swipe-cell right-width="{{ 65 }}">
        <van-cell>
          <view slot="title">
            <view class="mk-cart-card_list">
              <view class="mk-cart-card_check">
                <van-checkbox
                  checked-color="#e26431"
                  data-index="{{index}}"
                  value="{{ cardProItem.checked }}"
                  bind:change="onChangeCartChecke"
                ></van-checkbox>
              </view>
              <van-card
                centered
                custom-class="mk-card_item"
                thumb-class="mk-card_img"
                title-class="mk-card_title"
                price="{{cardProItem.realPrice}}"
                title="{{cardProItem.productName}}"
                thumb="{{cardProItem.defaultImage}}"
                thumb-mode="aspectFill"
              >
                <view slot="desc" class="mk-card_desc">
                  <text>单位:{{cardProItem.unit}}</text>
                  <text>规格:{{cardProItem.size}}</text>
                </view>
                <view slot="footer" class="mk-card_item_stepper">
                  <text>剩余{{cardProItem.stock}}份</text>
                  <van-stepper
                    id="{{cardProItem.productID}}"
                    data-index="{{index}}"
                    disable-input
                    integer
                    min="1"
                    max="{{cardProItem.stock}}"
                    value="{{ cardProItem.productCount }}"
                    step="1"
                    bind:plus="onChangeAddStepper"
                    bind:minus="onChangeMinusStepper"
                  />
                </view>
              </van-card>
            </view>
          </view>
        </van-cell>
        <view
          slot="right"
          class="collect-right_btn"
          id="{{cardProItem.id}}"
          data-index="{{index}}"
          bindtap="onClickDeleteCart"
        >
          <text>删除</text>
        </view>
      </van-swipe-cell>
    </repeat>
  </scroll-view>
  <van-submit-bar
    class="fiex-bottom"
    custom-class="cart-submit-bar"
    button-text="确认订单"
    bind:submit="onSubmitOrder"
  >
    <view class="cart-submit-bar_right">
      <van-checkbox
        value="{{ checkAll }}"
        bind:change="onChangeCheckeAll"
        checked-color="#e26431"
      >全选</van-checkbox>
      <view>
        <view class="text">商品金额:
          <text class="van-submit-bar__price">¥{{ProAllPrice}}</text>
        </view>
        <view class="text text2">{{ProAllLength}}种商品,共计{{ProAllNum}}件</view>
      </view>
    </view>
  </van-submit-bar>
  <van-dialog id="van-dialog"/>
  <van-toast id="van-toast"/>
</template>

<script>
import wepy from 'wepy';
import Api from '../../utils/api';
import Dialog from '../../components/vant/dialog/dialog';
import Toast from '../../components/vant/toast/toast';
import noData from '../../components/nodata';

export default class info extends wepy.page {
  config = {
    navigationBarTitleText: '购物车',
    usingComponents: {
      'van-swipe-cell': '../../components/vant/swipe-cell/index',
      'van-icon': '../../components/vant/icon/index',
      'van-button': '../../components/vant/button/index',
      'van-cell': '../../components/vant/cell/index',
      'van-cell-group': '../../components/vant/cell-group/index',
      'van-card': '../../components/vant/card/index',
      'van-stepper': '../../components/vant/stepper/index',
      'van-checkbox': '../../components/vant/checkbox/index',
      'van-checkbox-group': '../../components/vant/checkbox-group/index',
      'van-submit-bar': '../../components/vant/submit-bar/index',
      'van-dialog': '../../components/vant/dialog/index',
      'van-toast': '../../components/vant/toast/index'
    }
  };

  components = {
    nodata: noData
  };

  mixins = [];

  data = {
    windowHeight: 0,
    checkAll: false,
    checkLength: 0,
    cardProList: []
  };

  computed = {
    ProAllLength() {
      var AllLength = 0;
      this.cardProList.forEach(function(e) {
        if (e.checked) {
          AllLength += 1;
        }
      });
      return AllLength;
    },
    ProAllNum() {
      var AllNum = 0;
      this.cardProList.forEach(function(e) {
        if (e.checked) {
          AllNum += e.productCount;
        }
      });
      return AllNum;
    },
    ProAllPrice() {
      var AllPrice = 0;
      this.cardProList.forEach(function(e) {
        if (e.checked) {
          AllPrice += e.productCount * e.realPrice;
        }
      });
      return AllPrice;
    }
  };

  methods = {
    onChangeCheckeAll(e) {
      this.checkAll = e.detail;
      this.cardProList.forEach(function(ev) {
        ev.checked = e.detail;
      });
      if (e.detail) {
        this.checkLength = this.cardProList.length;
      } else {
        this.checkLength = 0;
      }
    },
    onChangeCartChecke(e) {
      var index = e.currentTarget.dataset.index;
      this.cardProList[index].checked = e.detail;
      if (e.detail) {
        this.checkLength += 1;
        if (this.checkLength == this.cardProList.length) {
          this.checkAll = e.detail;
        }
      } else {
        this.checkLength -= 1;
        this.checkAll = e.detail;
      }
    },
    onClickDeleteCart(e) {
      var that = this;
      var index = e.currentTarget.dataset.index;
      var reqData = {
        ids: [e.currentTarget.id]
      };
      Api.PostMemberDeleteCart(reqData, function(res) {
        if (res.result) {
          Toast.success('删除成功');
          that.cardProList.splice(index, 1);
          that.$apply();
        } else {
          Toast.fail('删除失败,请重试');
        }
      });
    },
    onChangeAddStepper(e) {
      var that = this;
      var index = e.currentTarget.dataset.index;
      that.cardProList[index].productCount += 1;
      var reqData = {
        id: e.currentTarget.id,
        productCount: that.cardProList[index].productCount
      };
      that.PostMemberModifyCart(reqData, index, 1);
    },
    onChangeMinusStepper(e) {
      var that = this;
      var index = e.currentTarget.dataset.index;
      that.cardProList[index].productCount -= 1;
      var reqData = {
        id: e.currentTarget.id,
        productCount: that.cardProList[index].productCount
      };
      that.PostMemberModifyCart(reqData, index, 0);
    },
    onSubmitOrder() {
      var that = this;
      var ids = [];
      this.cardProList.forEach(function(e) {
        if (e.checked) {
          ids.push(e.id);
        }
      });
      var reqData = {
        ids: ids
      };
      Api.PostOrderConfirmOrder(reqData, function(res) {
        wx.setStorage({
          key: 'cartConfirm',
          data: res.resultData
        });
        if (res.result) {
          wx.navigateTo({
            url: 'confirm?cart=1'
          });
        } else {
          Dialog.alert({
            title: '订单确认失败',
            message: res.message,
            messageAlign: 'left'
          });
        }
      });
    }
  };

  events = {};

  PostMemberModifyCart(data, index, type) {
    var that = this;
    Api.PostMemberModifyCart(data, function(res) {
      if (res.result) {
        if (type) {
          that.cardProList[index].stock -= 1;
          Toast.success('增加成功');
        } else {
          that.cardProList[index].stock += 1;
          Toast.success('减少成功');
        }
      } else {
        Toast.fail('操作失败,请重试');
      }
    });
  }

  GetMemberMyCart(){
    let that = this;
    Api.GetMemberMyCart(function(res) {
      var DataList = res.resultData.dataList;
      DataList.forEach(function(e) {
        e.checked = false;
      });
      that.cardProList = DataList;
      that.$apply();
    });
  }

  onLoad() {
    let that = this;
    let windowHeight = wx.getSystemInfoSync().windowHeight;
    let query = wx.createSelectorQuery();
    query
      .select('.fiex-bottom')
      .boundingClientRect()
      .exec(function(res) {
        that.windowHeight = windowHeight - res[0].height;
      });
    that.GetMemberMyCart();
  }

  onShow(){
    let that = this;
    that.GetMemberMyCart();
  }
}
</script>
