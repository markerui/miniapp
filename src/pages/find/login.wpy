<style lang="less">
@import '../../less/color.less';
</style>

<template>
  <view >
    <image
      mode="aspectFill"
       style="height: {{windowHeight}}px; width:100%"
      src="{{imgSrc}}"
    >
    <van-dialog use-slot title="请先登录" show="{{ true }}" bind:confirm="onConfirm">
      <view style="padding-top:12px">
          <block wx:if="{{validatetype == 1}}">
            <van-field label="卡号" value="{{formData.code}}" data-name="code" placeholder="请输入卡号"  bind:change="onInput"/>
            <van-field type="password" value="{{formData.pwd}}" data-name="pwd" label="密码" border="{{ false }}" placeholder="请输入密码"  bind:change="onInput"/>
          </block>
          <block wx:else>
            <van-field label="手机号" value="{{formData.mobile}}" data-name="mobile" placeholder="请输入手机号"  bind:change="onInput"/>
            <van-field
              center
              clearable
              label="短信验证码"
              placeholder="请输入短信验证码"
              border="{{ false }}"
              use-button-slot
            >
              <van-button slot="button" size="small" type="primary">发送验证码</van-button>
            </van-field>
        </block>
      </view>
    </van-dialog>

    <van-dialog id="van-dialog" />
  </view>
</template>

<script>
import wepy from 'wepy';
import Api from "../../utils/api";
import Dialog from '../../components/vant/dialog/dialog';
import noData from '../../components/nodata';

export default class info extends wepy.page {
  config = {
    navigationBarTitleText: '卡券登录',
    usingComponents: {
      'van-icon': '../../components/vant/icon/index',
      'van-dialog': '../../components/vant/dialog/index',
      'van-field': '../../components/vant/field/index',
      'van-button': '../../components/vant/button/index'
    }
  };

  components = {
    nodata: noData,
  };

  mixins = [];

  data = {
    windowHeight: 0,
    validatetype: 0,
    imgSrc : '',
    formData: {
      code: '',
      pwd: '',
      mobile: '',
      campaignID: '',
    }
  };

  computed = {};

  methods = {
    onInput(e){
      var value = e.detail;
      var name = e.currentTarget.dataset.name;
      this.formData[name] = value;
    },
    onConfirm() {
      this.PostCampaignVerifyCode();
    }
  };

  PostCampaignVerifyCode(){
    var that = this;
    if(that.formData.mobile){
      Api.PostCampaignSendSMS(that.formData,function(res){
        if(res.result){
          wx.redirectTo({
            url: 'cart'
          });
          wx.setStorage({
            key: 'findCartConfirm',
            data: res.resultData
          });
        }else{
          Dialog.alert({
            title: '提示',
            message: res.message
          });
        }
      });
    }else{
      Api.PostCampaignVerifyCode(that.formData,function(res){
        if(res.result){
          wx.redirectTo({
            url: 'cart'
          });
          wx.setStorage({
            key: 'findCartConfirm',
            data: res.resultData
          });
        }else{
          Dialog.alert({
            title: '提示',
            message: res.message
          });
        }
      });
    }
  }

  events = {};

  onLoad(e) {
    var that = this;
    that.imgSrc = e.img;
    that.formData.campaignID = e.id;
    that.validatetype = e.validatetype;
    that.windowHeight = wx.getSystemInfoSync().windowHeight;
  }
}
</script>
