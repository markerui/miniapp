<style lang="less">
@import '../../less/color.less';
.order-list-items {
  margin: 15px;
  font-size: 14px;
  position: relative;
  &.order-list-items_end {
    .order-list-items_card {
      .order-list-items_card_head {
        background-color: #c9c9c9;
      }
    }
  }
  .order-list-items_time {
    text-align: center;
    padding: 10px;
    text {
      background-color: #999;
      color: #fff;
      border-radius: 5px;
      padding: 5px 10px;
      font-size: 10px;
    }
  }

  .order-list-items_card {
    background-color: #fff;
    border-radius: 5px;

    .order-list-items_card_head {
      background-color: @rootColor;
      color: #fff;
      padding: 10px;
      border-radius: 5px 5px 0 0;
      &.order-list-items_head_flex {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
      }
    }
    .order-list-items_card_info {
      padding: 10px 10px 0 10px;
      font-size: 12px;
      .order-list-items_card_info_text {
        color: #333;
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        text {
          flex: 1;
          padding-bottom: 10px;
        }
        .text {
          color: #999;
          flex: none;
          width: 70px;
        }
      }
    }
  }
  .order-list-items_foot {
    position: absolute;
    right: 10px;
    bottom: 10px;
    van-button {
      margin-left: 10px;
    }
    .order-list-items_foot_flex {
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: flex-end;
    }
  }
}

.order-dialog {
  padding: 10px;
  .van-radio {
    margin-bottom: 10px;
  }
}
</style>

<template>
  <van-tabs active="0" color="#e26431" bind:change="onChangeOrderTabs">
    <repeat for="{{orderTabs}}" key="index" index="index" item="item">
      <van-tab title="{{item.name}}"></van-tab>
    </repeat>
  </van-tabs>
  
  <block wx:if="{{orderList.length>0}}">

    <view class="order-list">
      <repeat for="{{orderList}}" key="index" index="index" item="item">
        <view class="order-list-items {{item.orderStatus>5? 'order-list-items_end':''}}">
          <view class="order-list-items_time">
            <text>{{item.createTime}}</text>
          </view>
          <view class="order-list-items_card" id="{{item.orderNum}}" bindtap="onGoOrderDetail">
            <view class="order-list-items_card_head order-list-items_head_flex">
              <text>订单号 {{item.orderNum}}</text>
              <block wx:if="{{item.orderStatus == 1 }}">
                  <text>待支付</text>
              </block>
              <block wx:elif="{{item.orderStatus == 3 }}">
                <text>待发货</text>
              </block>
              <block wx:elif="{{item.orderStatus == 5 }}">
                <text>待收货</text>
              </block>
              <block wx:elif="{{item.orderStatus == 6 }}">
                <text>交易成功</text>
              </block>
              <block wx:elif="{{item.orderStatus == 7 }}">
                <text>交易取消</text>
              </block>
              <block wx:else>
                <text>未知订单</text>
              </block>
            </view>
            <view class="order-list-items_card_info">
              <view class="order-list-items_card_info_text">
                <text class="text">订货人</text>
                <text>{{item.reveiveName}}</text>
              </view>
              <view class="order-list-items_card_info_text">
                <text class="text">联系方式</text>
                <text>{{item.reveiveMobile}}</text>
              </view>
              <view class="order-list-items_card_info_text">
                <text class="text">联系地址</text>
                <text>{{item.reveiveAddress}}</text>
              </view>
              <view class="order-list-items_card_info_text">
                <text class="text">订单金额</text>
                <text>{{item.actualPayment}}</text>
              </view>
            </view>
          </view>
          <!-- <view class="order-list-items_foot order-list-items_foot_flex">
            <van-button plain hairline type="default" size="small">取消</van-button>
            <van-button plain hairline type="danger" size="small" bind:click="onShowDialog">发货</van-button>
          </view> -->
          <block wx:if="{{item.orderStatus == 1 }}">
              <view class="order-list-items_foot order-list-items_foot_flex">
                <van-button plain hairline type="danger" id="{{item.orderNum}}" size="small" bind:click="onPayOrder">支付订单</van-button>
              </view>
          </block>
        </view>
      <!-- order-list-items end -->
      </repeat>
    </view>

  </block>
  <block wx:else>
    <nodata></nodata>
  </block>



  <van-dialog use-slot show="{{ showDialog }}" title="发货" messageAlign="left" show-cancel-button>
    <view class="order-dialog">
      <van-radio-group value="1">
        <van-radio name="1" checked-color="#e26431">店面发货</van-radio>
        <van-radio name="2" checked-color="#e26431">委托发货</van-radio>
      </van-radio-group>
      <van-field type="textarea" autosize border="{{ false }}" placeholder="添加备注"/>
    </view>
  </van-dialog>
  <van-dialog id="van-dialog"/>

</template>

<script>
import wepy from 'wepy';
import Api from '../../utils/api';
import Dialog from '../../components/vant/dialog/dialog';
import noData from '../../components/nodata';

export default class info extends wepy.page {
  config = {
    navigationBarTitleText: '订单中心',
    navigationBarBackgroundColor: '#fff',
    navigationBarTextStyle: 'black',
    backgroundColor: '#fff',
    usingComponents: {
      'van-icon': '../../components/vant/icon/index',
      'van-tab': '../../components/vant/tab/index',
      'van-tabs': '../../components/vant/tabs/index',
      'van-button': '../../components/vant/button/index',
      'van-dialog': '../../components/vant/dialog/index',
      'van-field': '../../components/vant/field/index',
      'van-radio': '../../components/vant/radio/index',
      'van-radio-group': '../../components/vant/radio-group/index',
    }
  };

  components = {
    nodata: noData
  };

  mixins = [];

  data = {
    reqData:{
      pageIndex: 1,
      pageSize: 1,
      type: 0
    },
    orderTabs:[
      {
        name: '全部订单',
        type: 0
      },
      {
        name: '待付款',
        type: 1
      },
      {
        name: '待发货',
        type: 3
      },
      {
        name: '待收货',
        type: 5
      },
      {
        name: '已完成',
        type: 6
      },
      {
        name: '已取消',
        type: 7
      }
    ],
    windowHeight: 0,
    showDialog: false,
    orderList: []
  };



  methods = {
    onChangeOrderTabs(e){
      var that = this;
      var index = e.detail.index;
      var type = that.orderTabs[index].type;
      that.reqData.type = type;
      that.reqData.pageIndex = 1,
      that.PostMemberGetOrderList();
    },
    onShowDialog() {
      this.showDialog = true;
    },
    onPayOrder(e){
      this.PostOrderWeixinPay(e.currentTarget.id)
    },
    onGoOrderDetail(e){
      wx.navigateTo({
        url: 'index?id='+ e.currentTarget.id
      });
    }
  };

  events = {};

  PostOrderWeixinPay(orderNum){
    var data = {
      orderNum: orderNum
    };
    Api.PostOrderWeixinPay(data,function(res){
      if(res.result){
        var prepaidOrder = res.resultData.prepaidOrder;
        wx.requestPayment({
          timeStamp: prepaidOrder.timeStamp,
          nonceStr: prepaidOrder.nonceStr,
          package: prepaidOrder.package,
          signType: prepaidOrder.signType,
          paySign: prepaidOrder.paySign,
          success(res) {
            Dialog.alert({
              title: '支付成功',
              message: res.message
            }).then(() => {
              that.PostMemberGetOrderList();
            });
          },
          fail(res){
            Dialog.alert({
              title: '支付失败',
              message: res.message
            });
          }
        });
      }else{
        Dialog.alert({
          title: '支付失败',
          message: res.message
        });
      }
    });
  }

  PostMemberGetOrderList(){
    var that = this;
    Api.PostMemberGetOrderList(that.reqData,function(res){
      that.orderList = res.resultData.dataList;
      that.$apply();
    })
  }

  onLoad() {
    var that = this;
    that.PostMemberGetOrderList();
  }
}
</script>
